[{"path":"http://dmenne.github.io/gastempt/articles/gastempt.html","id":"vignette-info","dir":"Articles","previous_headings":"","what":"Vignette Info","title":"Fitting gastric emptying curves","text":"Intro non-linear fitting Ben Bolker non-linear fitting Dieter’s blog ballot bazaar: borrowing co-data makes stronger.","code":""},{"path":"http://dmenne.github.io/gastempt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dieter Menne. Author, maintainer.","code":""},{"path":"http://dmenne.github.io/gastempt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Menne D (2022). gastempt: Analyzing Gastric Emptying MRI Scintigraphy. https://github.com/dmenne/gastempt, http://dmenne.github.io/gastempt/.","code":"@Manual{,   title = {gastempt: Analyzing Gastric Emptying from MRI or Scintigraphy},   author = {Dieter Menne},   year = {2022},   note = {https://github.com/dmenne/gastempt, http://dmenne.github.io/gastempt/}, }"},{"path":"http://dmenne.github.io/gastempt/index.html","id":"gastempt-fitting-gastric-emptying-curves","dir":"","previous_headings":"","what":"Analyzing Gastric Emptying from MRI or Scintigraphy","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"Dieter Menne Menne Biomed Consulting Tübingen, Germanyhttps://www.menne-biomed.dedieter.menne@menne-biomed.de package Shiny web application create simulated gastric emptying data, analyze gastric emptying clinical studies using population fit R package nlme. addition, Bayesian fits Stan handle critical cases implemented. Part work supported section GI MRT, Klinik für Gastroenterologie und Hepatologie, Universitätsspital Zürich; thanks Werner Schwizer Andreas Steingötter contributions.","code":""},{"path":"http://dmenne.github.io/gastempt/index.html","id":"download","dir":"","previous_headings":"","what":"Download","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"package available CRAN github (source, documentation). install, use: Compilation Stan models needs several minutes.","code":"devtools::install_github(\"dmenne/gastempt\")"},{"path":"http://dmenne.github.io/gastempt/index.html","id":"shiny-online-interface","dir":"","previous_headings":"","what":"Shiny online interface","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"web interface can installed computer, run web app. Two models implemented web interface linexp, vol = v0 * (1 + kappa * t / tempt) * exp(-t / tempt):Recommended gastric emptying curves initial volume overshoot secretion. parameter kappa > 1, maximum t=0. emptying curves start steep drop, model can difficult fit. powexp, vol = v0 * exp(-(t / tempt) ^ beta): power exponential function introduced Elashof et. al. fit scintigraphic emptying data; type data initial overshoot design. Compared linexp model, fitting powexp reliable rarely fails converge presence noise outliers. power exponential can useful MRI data unusual late phase emptying.","code":""},{"path":"http://dmenne.github.io/gastempt/index.html","id":"methods-with-variants","dir":"","previous_headings":"","what":"Methods with variants","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"Population fits based function nlme package R nlme. Stan-based fits, without covariance estimation. Thanks priors, fitting Bayesian methods also works single records, even stability strongly improves data sets available; see stan_gastempt. details can found blog. rationale using Stan fit non-linear curves discussed 13C breath test data, equally valid gastric emptying data.","code":""},{"path":"http://dmenne.github.io/gastempt/index.html","id":"data-entry","dir":"","previous_headings":"","what":"Data entry:","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"Data can entered directly clipboard copied Excel, can simulated using Shiny app. Several preset simulations provided Shiny app, different amounts noise outliers Robustness models can tested manipulating noise quality -subject variance. Fits displayed data. coefficients analysis including half-emptying time t50 slope time t50 can downloaded .csv format.","code":""},{"path":"http://dmenne.github.io/gastempt/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"Program simulated data (needs 40 seconds till plot shows): Screenshot","code":"library(gastempt) dd = simulate_gastempt(n_records = 6, seed = 471) d = dd$data ret = stan_gastempt(d) print(ret$coef) print(ret$plot)"},{"path":"http://dmenne.github.io/gastempt/index.html","id":"installing-docker","dir":"","previous_headings":"","what":"Installing Docker","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"Windows 10, can get installer Docker store. installation details, see . Linux users know install Docker anyway.","code":""},{"path":"http://dmenne.github.io/gastempt/index.html","id":"installing-gastempt","dir":"","previous_headings":"","what":"Installing gastempt","title":"Analyzing Gastric Emptying from MRI or Scintigraphy","text":"command line, enter following start container first startup needs time 1 GB downloaded. Subsequent startups require seconds. Connect app browser via localhost:3838.","code":"docker run --name gastempt  --restart unless-stopped -p 3838:3838 -d dmenne/gastempt"},{"path":"http://dmenne.github.io/gastempt/reference/coef.nlme_gastempt.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract coefficients from nlme_gastempt result — coef.nlme_gastempt","title":"Extract coefficients from nlme_gastempt result — coef.nlme_gastempt","text":"Extract coefficients nlme_gastempt result","code":""},{"path":"http://dmenne.github.io/gastempt/reference/coef.nlme_gastempt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract coefficients from nlme_gastempt result — coef.nlme_gastempt","text":"","code":"# S3 method for nlme_gastempt coef(object, ...)"},{"path":"http://dmenne.github.io/gastempt/reference/coef.nlme_gastempt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract coefficients from nlme_gastempt result — coef.nlme_gastempt","text":"object Result call nlme_gastempt ... arguments","code":""},{"path":"http://dmenne.github.io/gastempt/reference/coef.nlme_gastempt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract coefficients from nlme_gastempt result — coef.nlme_gastempt","text":"data frame coefficients. See nlme_gastempt example.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/coef.stan_gastempt.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract coefficients from stan_gastempt result — coef.stan_gastempt","title":"Extract coefficients from stan_gastempt result — coef.stan_gastempt","text":"Extract coefficients stan_gastempt result","code":""},{"path":"http://dmenne.github.io/gastempt/reference/coef.stan_gastempt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract coefficients from stan_gastempt result — coef.stan_gastempt","text":"","code":"# S3 method for stan_gastempt coef(object, ...)"},{"path":"http://dmenne.github.io/gastempt/reference/coef.stan_gastempt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract coefficients from stan_gastempt result — coef.stan_gastempt","text":"object Result call stan_gastempt ... arguments","code":""},{"path":"http://dmenne.github.io/gastempt/reference/coef.stan_gastempt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract coefficients from stan_gastempt result — coef.stan_gastempt","text":"data frame coefficients. See nlme_gastempt example.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/gastemptfunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Functions for gastric emptying analysis — gastemptfunc","title":"Functions for gastric emptying analysis — gastemptfunc","text":"linexp power exponential (powexp) functions can used fit gastric emptying curves.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/gastemptfunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functions for gastric emptying analysis — gastemptfunc","text":"","code":"linexp(t, v0 = 1, tempt = NULL, kappa = NULL, pars = NULL)  linexp_slope(t, v0 = 1, tempt = NULL, kappa = NULL, pars = NULL)  linexp_auc(v0 = 1, tempt = NULL, kappa = NULL, pars = NULL)  powexp(t, v0 = 1, tempt = NULL, beta = NULL, pars = NULL)  powexp_slope(t, v0 = 1, tempt = NULL, beta = NULL, pars = NULL)  linexp_log(t, v0 = 1, logtempt = NULL, logkappa = NULL, pars = NULL)  powexp_log(t, v0 = 1, logtempt = NULL, logbeta = NULL, pars = NULL)"},{"path":"http://dmenne.github.io/gastempt/reference/gastemptfunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functions for gastric emptying analysis — gastemptfunc","text":"t Time meal start scan, minutes; can vector. v0 Initial volume t=0. tempt Emptying time constant minutes (scalar). kappa Overshoot term linexp function (scalar). pars Default NULL. NULL, parameters exception t used retrieved named parameters numeric vector pars instead. beta Power term power exponential function (scalar). logtempt Logarithm emptying time constant minutes (scalar). logkappa Logarithm overshoot term linexp function (scalar). logbeta Logarithm power term power exponential function (scalar).","code":""},{"path":"http://dmenne.github.io/gastempt/reference/gastemptfunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functions for gastric emptying analysis — gastemptfunc","text":"Vector length(t) computed volume.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/gastemptfunc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Functions for gastric emptying analysis — gastemptfunc","text":"linexp function can initial overshoot model secretion. vol(t) = v0 * (1 + kappa * t / tempt) * exp(-t / tempt) powexp function introduced  Elashof et al. montonously decreasing freedom model details function tail. vol(t) = v0 * exp(-(t / tempt) ^ beta) _slope functions return first derivatives linexp powexp. Use _log functions enforce positive parameters tempt beta. Rarely required gastric emptying curves.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/gastemptfunc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functions for gastric emptying analysis — gastemptfunc","text":"","code":"t = seq(0,100, by=5) kappa = 1.3 tempt = 60 v0 = 400 beta = 3 pars = c(v0 = v0, tempt = tempt, kappa = kappa) oldpar = par(mfrow = c(1,3)) plot(t, linexp(t, v0, tempt, kappa), type = \"l\", ylab = \"volume\",    main = \"linexp\\nkappa = 1.3 and 1.0\") lines(t, linexp(t, v0, tempt, 1), type = \"l\", col = \"green\") # This should give the same plot as above plot(t, linexp(t, pars = pars), type = \"l\", ylab = \"volume\",    main = \"linexp\\nkappa = 1.3 and 1.0\\nwith vectored parameters\") lines(t, linexp(t, v0, tempt, 1), type = \"l\", col = \"green\") plot(t, powexp(t, v0, tempt, beta), type = \"l\", ylab = \"volume\",   main = \"powexp\\nbeta = 2 and 1\") lines(t, powexp(t, v0, tempt, 1), type = \"l\", col = \"green\")  par(oldpar)"},{"path":"http://dmenne.github.io/gastempt/reference/nlme_gastempt.html","id":null,"dir":"Reference","previous_headings":"","what":"Simplified population fit of gastric emptying data — nlme_gastempt","title":"Simplified population fit of gastric emptying data — nlme_gastempt","text":"Compute coefficients v0, tempt kappa mixed model fit linexp function one grouping variable","code":""},{"path":"http://dmenne.github.io/gastempt/reference/nlme_gastempt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simplified population fit of gastric emptying data — nlme_gastempt","text":"","code":"nlme_gastempt(d, pnlsTol = 0.001, model = linexp, variant = 1)"},{"path":"http://dmenne.github.io/gastempt/reference/nlme_gastempt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simplified population fit of gastric emptying data — nlme_gastempt","text":"d data frame columns record Record descriptor grouping variable, e.g. patient ID minute Time meal start recording. vol Volume meal stomach pnlsTol value pnlsTol initial iteration. See nlmeControl  model converge, pnlsTol multiplied 5 iteration repeated convergence pnlsTol >= 0.5. effective value  pnlsTol returned separate list item. known data set converges badly, recommended set initial pnlsTol higher value, 0.5, faster convergence. model linexp (default) powexp variant models, 3 variants variant = 1 generic version independent estimates   three parameters per record   (random = v0 + tempt + kappa ~ 1 | record). likely fail   degenerate cases. variant converges, use . variant = 2  Diagonal random effects   (random = pdDiag(v0 + tempt + kappa) ~ 1; groups =  ~record ).   Better convergence critical cases. Note:  never found   use groups parameter instead |;   see also p. 380 Pinheiro/Bates. variant = 3 Since parameters kappa   beta respectively difficult estimate,   fixed variant (random = v0 + tempt ~ 1).   variant converges reasonable cases, estimates   kappa beta use secondary   -group analysis. interested t50,   can use safe version.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/nlme_gastempt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simplified population fit of gastric emptying data — nlme_gastempt","text":"list class nlme_gastempt elements coef, summary, plot, pnlsTol, message coef data frame columns: record Record descriptor, e.g. patient ID v0 Initial volume t=0 tempt Emptying time constant kappa Parameter kappa             model = linexp beta Parameter beta model = powexp t50 Half-time emptying slope_t50 Slope t50; typically units ml/minute error, coef NULL nlme_result Result nlme fit; can used addition      processing, e.g. plot residuals via summary extract AIC.      error, nlme_result NULL. plot ggplot graph data prediction. Plot raw data      returned even convergence achieved. pnlsTol Effective value pnlsTo convergence failure. message String \"Ok\" success, error message      nlme failure.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/nlme_gastempt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simplified population fit of gastric emptying data — nlme_gastempt","text":"","code":"suppressWarnings(RNGversion(\"3.5.0\")) set.seed(4711) d = simulate_gastempt(n_record = 10, kappa_mean = 0.9, kappa_std = 0.3,                       model = linexp)$data fit_d = nlme_gastempt(d) # fit_d$coef # direct access coef(fit_d) # better use accessor function #>    record       v0     tempt     kappa      t50 slope_t50      auc #> 1  rec_01 514.2462  38.26585 0.9615993 62.74269  4.211766 38600.49 #> 2  rec_02 494.2109  29.05876 0.7793491 62.74269  4.211766 38600.49 #> 3  rec_03 474.9858  65.59160 0.9788704 62.74269  4.211766 38600.49 #> 4  rec_04 409.2693  70.62264 0.6728595 62.74269  4.211766 38600.49 #> 5  rec_05 364.8323  69.44100 0.4271404 62.74269  4.211766 38600.49 #> 6  rec_06 342.5194 104.72522 0.6051172 62.74269  4.211766 38600.49 #> 7  rec_07 438.8806  48.00304 0.6406247 62.74269  4.211766 38600.49 #> 8  rec_08 370.9063  72.24122 0.4837465 62.74269  4.211766 38600.49 #> 9  rec_09 396.3088  59.63892 0.5044898 62.74269  4.211766 38600.49 #> 10 rec_10 446.1476  82.81441 0.9664679 62.74269  4.211766 38600.49 coef(fit_d, signif = 3) # Can also set number of digits #>    record  v0 tempt kappa  t50 slope_t50   auc #> 1  rec_01 514  38.3 0.962 62.7      4.21 38600 #> 2  rec_02 494  29.1 0.779 62.7      4.21 38600 #> 3  rec_03 475  65.6 0.979 62.7      4.21 38600 #> 4  rec_04 409  70.6 0.673 62.7      4.21 38600 #> 5  rec_05 365  69.4 0.427 62.7      4.21 38600 #> 6  rec_06 343 105.0 0.605 62.7      4.21 38600 #> 7  rec_07 439  48.0 0.641 62.7      4.21 38600 #> 8  rec_08 371  72.2 0.484 62.7      4.21 38600 #> 9  rec_09 396  59.6 0.504 62.7      4.21 38600 #> 10 rec_10 446  82.8 0.966 62.7      4.21 38600 # Avoid ugly ggplot shading (not really needed...) library(ggplot2) theme_set(theme_bw() + theme(panel.spacing = grid::unit(0,\"lines\"))) # fit_d$plot  # direct access is possible plot(fit_d) # better use accessor function"},{"path":"http://dmenne.github.io/gastempt/reference/plot.nlme_gastempt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data points and fit curve of an nlme_gastempt fit — plot.nlme_gastempt","title":"Plot data points and fit curve of an nlme_gastempt fit — plot.nlme_gastempt","text":"Plot data points fit curve nlme_gastempt fit","code":""},{"path":"http://dmenne.github.io/gastempt/reference/plot.nlme_gastempt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data points and fit curve of an nlme_gastempt fit — plot.nlme_gastempt","text":"","code":"# S3 method for nlme_gastempt plot(x, ...)"},{"path":"http://dmenne.github.io/gastempt/reference/plot.nlme_gastempt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data points and fit curve of an nlme_gastempt fit — plot.nlme_gastempt","text":"x Result call nlme_gastempt ... arguments","code":""},{"path":"http://dmenne.github.io/gastempt/reference/plot.nlme_gastempt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data points and fit curve of an nlme_gastempt fit — plot.nlme_gastempt","text":"ggplot object. Use print() used non-interactively show curve","code":""},{"path":"http://dmenne.github.io/gastempt/reference/plot.stan_gastempt.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot data points and fit curve of an stan_gastempt fit — plot.stan_gastempt","title":"Plot data points and fit curve of an stan_gastempt fit — plot.stan_gastempt","text":"Plot data points fit curve stan_gastempt fit","code":""},{"path":"http://dmenne.github.io/gastempt/reference/plot.stan_gastempt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot data points and fit curve of an stan_gastempt fit — plot.stan_gastempt","text":"","code":"# S3 method for stan_gastempt plot(x, ...)"},{"path":"http://dmenne.github.io/gastempt/reference/plot.stan_gastempt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot data points and fit curve of an stan_gastempt fit — plot.stan_gastempt","text":"x Result call stan_gastempt ... arguments","code":""},{"path":"http://dmenne.github.io/gastempt/reference/plot.stan_gastempt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot data points and fit curve of an stan_gastempt fit — plot.stan_gastempt","text":"ggplot object. Use print() used non-interactively show curve","code":""},{"path":"http://dmenne.github.io/gastempt/reference/run_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Run shiny app demonstrating fit strategies with simulated data — run_shiny","title":"Run shiny app demonstrating fit strategies with simulated data — run_shiny","text":"Run shiny app demonstrating fit strategies simulated data","code":""},{"path":"http://dmenne.github.io/gastempt/reference/run_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run shiny app demonstrating fit strategies with simulated data — run_shiny","text":"","code":"run_shiny()"},{"path":"http://dmenne.github.io/gastempt/reference/run_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run shiny app demonstrating fit strategies with simulated data — run_shiny","text":"used, starts shiny app","code":""},{"path":"http://dmenne.github.io/gastempt/reference/simulate_gastempt.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate gastric emptying data following a linexp or powexp function — simulate_gastempt","title":"Simulate gastric emptying data following a linexp or powexp function — simulate_gastempt","text":"Simulate gastric emptying data following linexp powexp function","code":""},{"path":"http://dmenne.github.io/gastempt/reference/simulate_gastempt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate gastric emptying data following a linexp or powexp function — simulate_gastempt","text":"","code":"simulate_gastempt(   n_records = 10,   v0_mean = 400,   v0_std = 50,   tempt_mean = ifelse(identical(model, linexp), 60, 120),   tempt_std = tempt_mean/3,   kappa_mean = 0.7,   kappa_std = kappa_mean/3,   beta_mean = 0.7,   beta_std = beta_mean/3,   noise = 20,   student_t_df = NULL,   missing = 0,   model = linexp,   seed = NULL,   max_minute = NULL )"},{"path":"http://dmenne.github.io/gastempt/reference/simulate_gastempt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate gastric emptying data following a linexp or powexp function — simulate_gastempt","text":"n_records Number records v0_mean, v0_std Mean record standard deviation initial volume, typically ml. tempt_mean, tempt_std Mean record standard deviation parameter $t_empt$, typically minutes. kappa_mean, kappa_std linexp : Mean -record standard deviation overshoot parameter kappa. values kappa 1, curve overshoot can used follow volume time series secretion. beta_mean, beta_std powexp : Mean -record standard deviation called lag parameter. noise Standard deviation normal noise student_t_df = NULL; scaling noise student_t_df >= 2. student_t_df NULL (default), Gaussian noise added; >= 2, Student_t distributed noise added, generates realistic outliers. Values 2 5 useful, higher values used result comes close Gaussian noise. Values 2 rounded 2. missing 0 (default), curves number data points. > 0, fraction points removed randomly simulate missing points. Maximum value 0.5. model linexp(default) powexp seed optional seed; set seed = NULL (default) max_minute Maximal time minutes; NULL, sensible default rounded hours used","code":""},{"path":"http://dmenne.github.io/gastempt/reference/simulate_gastempt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate gastric emptying data following a linexp or powexp function — simulate_gastempt","text":"list 3 elements: record Data frame columns     record(chr), v0, tempt, kappa/beta giving effective     linexp powexp parameters individual record.     v0 rounded nearest integer. data Data frame columns     record(chr), minute(dbl), vol(dbl) giving      time series grouping parameters. vol rounded      nearest integer. stan_data list use data Stan-based fits   elements prior_v0, n, n_record, record, minute, volume. comment attached return value can used title","code":""},{"path":"http://dmenne.github.io/gastempt/reference/simulate_gastempt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate gastric emptying data following a linexp or powexp function — simulate_gastempt","text":"","code":"suppressWarnings(RNGversion(\"3.5.0\")) set.seed(4711) library(ggplot2) vol_linexp = simulate_gastempt(n_records = 4, noise = 20) ggplot(vol_linexp$data, aes(x = minute, y = vol)) + geom_point() +   facet_wrap(~record) + ggtitle(\"linexp, noise = 0, no missing\")   vol_powexp = simulate_gastempt(n_records = 4, missing = 0.2, student_t_df = 2) ggplot(vol_powexp$data, aes(x = minute, y = vol)) + geom_point() +   facet_wrap(~record) + ggtitle(\"powexp, noise = 10 (default), 20% missing,   Student-t (df = 2) noise\")"},{"path":"http://dmenne.github.io/gastempt/reference/stan_gastempt.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit gastric emptying curves with Stan — stan_gastempt","title":"Fit gastric emptying curves with Stan — stan_gastempt","text":"Fit gastric emptying curves Stan","code":""},{"path":"http://dmenne.github.io/gastempt/reference/stan_gastempt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit gastric emptying curves with Stan — stan_gastempt","text":"","code":"stan_gastempt(   d,   model_name = \"linexp_gastro_2b\",   lkj = 2,   student_df = 5L,   init_r = 0.2,   chains = 1,   iter = 2000,   ... )"},{"path":"http://dmenne.github.io/gastempt/reference/stan_gastempt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit gastric emptying curves with Stan — stan_gastempt","text":"d data frame columns rec Record descriptor grouping variable, e.g. patient ID minute Time meal start recording. vol Volume meal stomach model_name Name predefined model gastempt/exec. Use stan_model_names() get list available models. lkj LKJ prior kappa/tempt correlation, required model linexp_gastro_2b. Values 1.5 (strong correlation) 50 (almost independent) useful. student_df Student-t degrees freedom residual error; default 5. Use 3 strong outliers; values 10 close gaussian residual distribution. init_r stan, default = 0.2; Stan's default 2, often results stuck chains. chains stan; default = 1 iter positive integer specifying number iterations chain (including warmup). default 2000. ... Additional parameter passed sampling stan","code":""},{"path":"http://dmenne.github.io/gastempt/reference/stan_gastempt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit gastric emptying curves with Stan — stan_gastempt","text":"list class stan_gastempt elements coef, fit, plot coef data frame columns: rec Record descriptor, e.g. patient ID v0 Initial volume t=0 tempt Emptying time constant kappa Parameter kappa             model = linexp beta Parameter beta model = powexp t50 Half-time emptying slope_t50 Slope t50; typically units ml/minute  error, coef NULL fit Result class `stanfit` plot ggplot graph data prediction. Plot raw data      returned even convergence achieved.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/stan_gastempt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit gastric emptying curves with Stan — stan_gastempt","text":"","code":"# \\donttest{  # Runs 30+ seconds on CRAN  dd = simulate_gastempt(n_records = 6, seed = 471)  d = dd$data  ret = stan_gastempt(d)  print(ret$coef) #> # A tibble: 6 × 7 #>   record    v0 kappa tempt   t50 slope_t50    auc #>   <chr>  <dbl> <dbl> <dbl> <dbl>     <dbl>  <dbl> #> 1 rec_01  286. 0.470  68.7  76.5      1.44 28853. #> 2 rec_02  429. 0.625  77.8  76.5      1.44 28853. #> 3 rec_03  407. 0.419  75.8  76.5      1.44 28853. #> 4 rec_04  368. 0.839  78.0  76.5      1.44 28853. #> 5 rec_05  427. 0.195  60.6  76.5      1.44 28853. #> 6 rec_06  471. 0.236  65.4  76.5      1.44 28853.  # }"},{"path":"http://dmenne.github.io/gastempt/reference/stan_model_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Names and descriptions of precompiled Stan models — stan_model_names","title":"Names and descriptions of precompiled Stan models — stan_model_names","text":"default, line 2 3 comments starting # // Stan file returned","code":""},{"path":"http://dmenne.github.io/gastempt/reference/stan_model_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Names and descriptions of precompiled Stan models — stan_model_names","text":"","code":"stan_model_names(n_lines = 2, skip = 1, sep = \"\\n\")"},{"path":"http://dmenne.github.io/gastempt/reference/stan_model_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Names and descriptions of precompiled Stan models — stan_model_names","text":"n_lines Number comment lines retrieve skip Number lines skip beginning Stan Model file sep separator multiline strings","code":""},{"path":"http://dmenne.github.io/gastempt/reference/stan_model_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Names and descriptions of precompiled Stan models — stan_model_names","text":"data frame model_name first n_linescomment lines model description","code":""},{"path":"http://dmenne.github.io/gastempt/reference/t50.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute half-emptying time from nlme parameters — t50","title":"Compute half-emptying time from nlme parameters — t50","text":"closed solution known linexp, use Newton  approximation.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/t50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute half-emptying time from nlme parameters — t50","text":"","code":"t50(x)"},{"path":"http://dmenne.github.io/gastempt/reference/t50.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute half-emptying time from nlme parameters — t50","text":"x Result nlme fit, named components `tempt, beta, logbeta, kappa, logkappa` depending model. Function used `logbeta` present, `x`, otherwise beta, similar logkappa/kappa.","code":""},{"path":"http://dmenne.github.io/gastempt/reference/t50.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute half-emptying time from nlme parameters — t50","text":"Half-emptying time. Name evaluated function returned attribute fun. Negative slope returned attribute slope.","code":""}]
